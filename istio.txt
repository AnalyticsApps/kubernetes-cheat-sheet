minikube delete
minikube start --memory=7951 --cpus=4 --kubernetes-version=v1.24.3
istioctl install --set profile=demo -y
kubectl create namespace bookinfo
kubectl get ns
kubectl label namespace bookinfo istio-injection=enabled
kubectl get namespace -L istio-injection
kubectl apply -f samples/bookinfo/platform/kube/bookinfo.yaml -n bookinfo
kubectl get services -n bookinfo
kubectl get pods -n bookinfo
kubectl exec -n bookinfo "$(kubectl get pod -n bookinfo -l app=ratings -o jsonpath='{.items[0].metadata.name}')" -c ratings -- curl -sS productpage:9080/productpage | grep -o "<title>.*</title>"

kubectl apply -f samples/bookinfo/networking/bookinfo-gateway.yaml -n bookinfo
istioctl analyze -n bookinfo
kubectl expose deployment productpage-v1 --type=LoadBalancer --port=9080 -n bookinfo
minikube tunnel (separate window)
kubectl get services -n bookinfo
http://localhost:9080
kubectl apply -f samples/addons
kubectl rollout status deployment/kiali -n istio-system
istioctl dashboard kiali
for i in $(seq 1 100); do curl -s -o /dev/null "http://localhost:9080"; done  (separate window)

Uninstall
samples/bookinfo/platform/kube/cleanup.sh
kubectl get virtualservices -n bookinfo
kubectl get destinationrules -n bookinfo
kubectl get gateway -n bookinfo
kubectl get pods -n bookinfo
kubectl delete -f samples/addons
istioctl uninstall -y --purge
kubectl delete namespace istio-system
kubectl label namespace bookinfo istio-injection-
kubectl delete namespace bookinfo
kubectl get ns


==========
Install keycloak

kubectl create -f keycloak.yaml

kubectl exec -it keycloak-6f76f6b559-28dtn -- /bin/bash
cd /opt/keycloak/bin/
kcadm.sh config credentials --server http://localhost:8080/auth --realm master --user admin

minikube tunnel (separate window)
KEYCLOAK_URL=http://$(minikube ip):$(kubectl get services/keycloak -o go-template='{{(index .spec.ports 0).nodePort}}') &&
echo "" &&
echo "Keycloak:                 $KEYCLOAK_URL" &&
echo "Keycloak Admin Console:   $KEYCLOAK_URL/admin" &&
echo "Keycloak Account Console: $KEYCLOAK_URL/realms/myrealm/account" &&
echo ""
http://127.0.0.1:8080




export TKN=$(curl -X POST --insecure http://127.0.0.1:8080/realms/master/protocol/openid-connect/token \
 -H "Content-Type: application/x-www-form-urlencoded" \
 -d "username=admin" \
 -d 'password=admin' \
 -d 'grant_type=password' \
 -d 'client_id=admin-cli' | jq -r '.access_token')

echo $TKN
curl -X POST --insecure http://127.0.0.1:8080/admin/realms/master/clients \
  -H "authorization: Bearer $TKN" \
  -H "Content-Type: application/json" \
  --data \
  '{
     "id": "test",
     "name": "test",
     "redirectUris": ["*"]
  }' 

  export CLIENT_SECRET=$(curl --insecure http://127.0.0.1:8080/admin/realms/master/clients/test/client-secret \
   -H "authorization: Bearer ${TKN}" \
   -H "Content-Type: application/json" | jq -r '.value')
